; Description: 
;	This script will save the value of variable that is a number into a file.
;	The value can be recovered later using the macro:
;		/macros/variable/load.g
;	NOTE: 	To save strings or array of strings use save_string.g if available,
;			but not this macro.
; Input parameters:
;	- N: Name of the file
;	- V: Value (can be array too)
;	- (optional) C: Append the value to CSV.
;		0: Disabled (default)
;		1: Enabled
;	- (optional) D: Disable the gcode file record. When only CSV files is wanted
;		0: G-Code file will be created or overwritten (default)
;		1: G-Code file will be omited.
;------------------------------------------------------------------------------
var CURRENT_FILE = "/macros/variable/save_number.g"

; Checking global variables and input parameters ------------------------------
; Checking global variables
M98 P"/macros/assert/abort_if.g" 		R{!exists(param.N)}  	Y{"Missing input parameter N"}  F{var.CURRENT_FILE} E68100
M98 P"/macros/assert/abort_if_null.g" 	R{param.N} 				Y{"Input parameter N is null"} 	F{var.CURRENT_FILE} E68101
M98 P"/macros/assert/abort_if.g" 	  	R{param.N == ""}  		Y{"Parameter N is empty"} 		F{var.CURRENT_FILE} E68102
M98 P"/macros/assert/abort_if.g" 		R{!exists(param.V)}  	Y{"Missing input parameter V"}  F{var.CURRENT_FILE} E68103
M98 P"/macros/assert/abort_if_null.g" 	R{param.V} 				Y{"Input parameter V is null"} 	F{var.CURRENT_FILE} E68104

; Definitions -----------------------------------------------------------------
var VARIABLES_FOLDER 		= "/sys/variables/" ; Folder where the file will be saved
var VARIABLE_FILE_VERSION 	= 0.1				; Version
var CSV_DELIMITER = ","							; Delimiter used to create the CSV
var CSV_FILE = {var.VARIABLES_FOLDER ^ "all.csv"}		; CSV file to record all the variables
var FILE_NAME = {var.VARIABLES_FOLDER ^ param.N ^ ".g"} ; File name, where the variable will be recorded
var TIME_SAVED = state.time						; Creation time
; Getting input parameters	
var CREATE_GCODE = (!exists(param.D) || (exists(param.D) && param.D!=null && param.D==0))
var CREATE_CSV   = (exists(param.C) && param.C != null && param.C == 1)

; File creation ---------------------------------------------------------------
; GCode file first
if(var.CREATE_GCODE)
	; Create file
	echo  >{var.FILE_NAME} {"; File Name:       "^var.FILE_NAME}
	echo >>{var.FILE_NAME} {"; File Version:    "^var.VARIABLE_FILE_VERSION}
	echo >>{var.FILE_NAME} {"; Author:          This file was autogenerated"}
	echo >>{var.FILE_NAME} {"; Creation Date:   "^var.TIME_SAVED}
	echo >>{var.FILE_NAME} {"; Description:"}
	echo >>{var.FILE_NAME} {";    This file was autogenerated using the macro:"}
	echo >>{var.FILE_NAME} {";        /macros/variable/save_number.g"}
	echo >>{var.FILE_NAME} {";    The name of the variable is:"}
	echo >>{var.FILE_NAME} {";        "^param.N}
	echo >>{var.FILE_NAME} {";    NOTE: Don't call this from a script executed from daemong.g"}
	echo >>{var.FILE_NAME} {"; Output parameters:"}
	echo >>{var.FILE_NAME} {";    - global.savedValue: Value saved of the variable."}
	echo >>{var.FILE_NAME} {";    - global.savedTime: Time when file was created."}
	echo >>{var.FILE_NAME} {";------------------------------------------------------------------------------"}
	echo >>{var.FILE_NAME} {"if (!exists(global.savedValue))"}
	echo >>{var.FILE_NAME} {"    global savedValue = "^param.V}
	echo >>{var.FILE_NAME} {"else"}
	echo >>{var.FILE_NAME} {"    set global.savedValue = "^param.V}
	echo >>{var.FILE_NAME} {"if (!exists(global.savedTime))"}
	echo >>{var.FILE_NAME} {"    global savedTime = """^var.TIME_SAVED^""""}
	echo >>{var.FILE_NAME} {"else"}
	echo >>{var.FILE_NAME} {"    set global.savedTime = """^var.TIME_SAVED^""""}
	echo >>{var.FILE_NAME} {"M99 ; Proper exit"}
; CSV file
if(var.CREATE_CSV)
	if (!fileexists({var.CSV_FILE}))
		; Append the first line
		echo  >{var.CSV_FILE} {"Time" ^ var.CSV_DELIMITER ^ "Variable" ^ var.CSV_DELIMITER ^ "Value" ^ var.CSV_DELIMITER}
	echo >>>{var.CSV_FILE} {var.TIME_SAVED ^ var.CSV_DELIMITER}
	echo >>>{var.CSV_FILE} {param.N ^ var.CSV_DELIMITER}
	echo  >>{var.CSV_FILE} {param.V ^ var.CSV_DELIMITER}

; -----------------------------------------------------------------------------
M99 ; proper exit